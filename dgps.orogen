name 'dgps'
version 0.1

using_library 'dgps'
import_types_from 'dfki'
import_types_from 'dgpstypes.hh'
import_types_from 'dgpsModuleTypes.hpp'

task_context 'Task' do
	needs_configuration
	fd_driven
	
	property("device", "/std/string").
            doc "the device file used to connect to the gps"
        property("port",   "/std/string").
            doc "the board port (A, B, C or D) at which we are connected"
        property("correction_port",   "/std/string").
            doc "the port (A, B, C, D or a number) at which the board gets correction data note, number means it is getting the correction data s UDP packets to port X"

        property("period",   "double").
            doc "the update period"

	property("utm_zone", "int", 33).
	    doc "UTM zone for conversion of WGS84 to UTM"
	property("utm_north", "int", 1).
	    doc "UTM north for conversion of WGS84 to UTM"
	property("origin", "/DFKI/Vector3").
	    doc "Origin in UTM coordinates, that is used for position readings." 
        property("dynamics_model", "/gps/DYNAMICS_MODEL").
	    doc "Model of the receiver dynamics" 
	property("user_dynamics", "/dgps/UserDynamics").
	    doc "If set, the module will put the board in USER_DYNAMICS mode with these values" 
		
	output_port('solution', '/gps/Solution')
	output_port('position_readings', '/DFKI/PositionReading')
	output_port('constellation', '/dgps/ConstellationInfo')
end


deployment "test_dgps" do
    do_not_install
    gps_task = task("Task", "Task")

    add_default_logger
    if !corba_enabled?
        browse gps_task
    end
end
